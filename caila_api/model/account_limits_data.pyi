# coding: utf-8

"""
    OpenAPI definition

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from caila_api import schemas  # noqa: F401


class AccountLimitsData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "baseModelInstanceLimit",
            "predictPerSec",
            "cpuLimit",
            "derivedModelInstanceLimit",
            "gpuModelInstanceLimit",
            "memoryLimit",
            "fitPerMinute",
            "ephemeralDiskLimit",
        }
        
        class properties:
            baseModelInstanceLimit = schemas.Int32Schema
            derivedModelInstanceLimit = schemas.Int32Schema
            gpuModelInstanceLimit = schemas.Int32Schema
            cpuLimit = schemas.StrSchema
            memoryLimit = schemas.StrSchema
            ephemeralDiskLimit = schemas.StrSchema
            predictPerSec = schemas.Int32Schema
            fitPerMinute = schemas.Int32Schema
            __annotations__ = {
                "baseModelInstanceLimit": baseModelInstanceLimit,
                "derivedModelInstanceLimit": derivedModelInstanceLimit,
                "gpuModelInstanceLimit": gpuModelInstanceLimit,
                "cpuLimit": cpuLimit,
                "memoryLimit": memoryLimit,
                "ephemeralDiskLimit": ephemeralDiskLimit,
                "predictPerSec": predictPerSec,
                "fitPerMinute": fitPerMinute,
            }
    
    baseModelInstanceLimit: MetaOapg.properties.baseModelInstanceLimit
    predictPerSec: MetaOapg.properties.predictPerSec
    cpuLimit: MetaOapg.properties.cpuLimit
    derivedModelInstanceLimit: MetaOapg.properties.derivedModelInstanceLimit
    gpuModelInstanceLimit: MetaOapg.properties.gpuModelInstanceLimit
    memoryLimit: MetaOapg.properties.memoryLimit
    fitPerMinute: MetaOapg.properties.fitPerMinute
    ephemeralDiskLimit: MetaOapg.properties.ephemeralDiskLimit
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["baseModelInstanceLimit"]) -> MetaOapg.properties.baseModelInstanceLimit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["derivedModelInstanceLimit"]) -> MetaOapg.properties.derivedModelInstanceLimit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gpuModelInstanceLimit"]) -> MetaOapg.properties.gpuModelInstanceLimit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cpuLimit"]) -> MetaOapg.properties.cpuLimit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["memoryLimit"]) -> MetaOapg.properties.memoryLimit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ephemeralDiskLimit"]) -> MetaOapg.properties.ephemeralDiskLimit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["predictPerSec"]) -> MetaOapg.properties.predictPerSec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fitPerMinute"]) -> MetaOapg.properties.fitPerMinute: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["baseModelInstanceLimit", "derivedModelInstanceLimit", "gpuModelInstanceLimit", "cpuLimit", "memoryLimit", "ephemeralDiskLimit", "predictPerSec", "fitPerMinute", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["baseModelInstanceLimit"]) -> MetaOapg.properties.baseModelInstanceLimit: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["derivedModelInstanceLimit"]) -> MetaOapg.properties.derivedModelInstanceLimit: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gpuModelInstanceLimit"]) -> MetaOapg.properties.gpuModelInstanceLimit: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cpuLimit"]) -> MetaOapg.properties.cpuLimit: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["memoryLimit"]) -> MetaOapg.properties.memoryLimit: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ephemeralDiskLimit"]) -> MetaOapg.properties.ephemeralDiskLimit: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["predictPerSec"]) -> MetaOapg.properties.predictPerSec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fitPerMinute"]) -> MetaOapg.properties.fitPerMinute: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["baseModelInstanceLimit", "derivedModelInstanceLimit", "gpuModelInstanceLimit", "cpuLimit", "memoryLimit", "ephemeralDiskLimit", "predictPerSec", "fitPerMinute", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        baseModelInstanceLimit: typing.Union[MetaOapg.properties.baseModelInstanceLimit, decimal.Decimal, int, ],
        predictPerSec: typing.Union[MetaOapg.properties.predictPerSec, decimal.Decimal, int, ],
        cpuLimit: typing.Union[MetaOapg.properties.cpuLimit, str, ],
        derivedModelInstanceLimit: typing.Union[MetaOapg.properties.derivedModelInstanceLimit, decimal.Decimal, int, ],
        gpuModelInstanceLimit: typing.Union[MetaOapg.properties.gpuModelInstanceLimit, decimal.Decimal, int, ],
        memoryLimit: typing.Union[MetaOapg.properties.memoryLimit, str, ],
        fitPerMinute: typing.Union[MetaOapg.properties.fitPerMinute, decimal.Decimal, int, ],
        ephemeralDiskLimit: typing.Union[MetaOapg.properties.ephemeralDiskLimit, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'AccountLimitsData':
        return super().__new__(
            cls,
            *_args,
            baseModelInstanceLimit=baseModelInstanceLimit,
            predictPerSec=predictPerSec,
            cpuLimit=cpuLimit,
            derivedModelInstanceLimit=derivedModelInstanceLimit,
            gpuModelInstanceLimit=gpuModelInstanceLimit,
            memoryLimit=memoryLimit,
            fitPerMinute=fitPerMinute,
            ephemeralDiskLimit=ephemeralDiskLimit,
            _configuration=_configuration,
            **kwargs,
        )
