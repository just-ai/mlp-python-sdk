openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: https://app.caila.io
  description: Generated server url
paths:
  /p/{accountField}/{modelField}:
    get:
      tags:
      - process-endpoint
      operationId: getModelInfoOld
      parameters:
      - name: accountField
        in: path
        required: true
        schema:
          type: string
      - name: modelField
        in: path
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfoData'
    post:
      tags:
      - process-endpoint
      operationId: servletPredict
      parameters:
      - name: accountField
        in: path
        required: true
        schema:
          type: string
      - name: modelField
        in: path
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/mlpgate/admin/system-config/account/{account}/data:
    get:
      tags:
      - admin-endpoint
      operationId: getAccountDataDump
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDataDump'
    post:
      tags:
      - admin-endpoint
      operationId: restoreAccountDataDump
      parameters:
      - name: dryRun
        in: query
        required: true
        schema:
          type: boolean
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/plain;charset=UTF-8:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DifferenceIAccountDataDump'
  /api/mlpgate/admin/system-config/account/{account}/config:
    get:
      tags:
      - admin-endpoint
      operationId: getAccountConfigDump
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountConfigDump'
    post:
      tags:
      - admin-endpoint
      operationId: restoreAccountConfigDump
      parameters:
      - name: dryRun
        in: query
        required: true
        schema:
          type: boolean
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountConfigDump'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DifferenceIAccountConfigDump'
  /api/mlpgate/admin/account/{account}/limits:
    post:
      tags:
      - admin-endpoint
      operationId: updateLimits
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountLimitsData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInfoData'
  /api/mlpgate/admin/account/{account}/features:
    get:
      tags:
      - admin-endpoint
      operationId: getAccountFeatures
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountFeatureData'
    post:
      tags:
      - admin-endpoint
      operationId: updateFeatures
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountFeatureData'
        required: true
      responses:
        "200":
          description: OK
  /api/mlpgate/account:
    get:
      tags:
      - account-endpoint
      operationId: ensureAccount
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInfoData'
    post:
      tags:
      - account-endpoint
      operationId: updateAccountData
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountInfoData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInfoData'
  /api/mlpgate/account/{account}/token:
    get:
      tags:
      - access-token-endpoint
      operationId: listAccessTokens
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessTokenData'
    post:
      tags:
      - access-token-endpoint
      operationId: createAccessToken
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: name
        in: query
        required: false
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenData'
  /api/mlpgate/account/{account}/resource-groups:
    get:
      tags:
      - resource-group-endpoint
      operationId: getAvailableResourceGroups
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceGroupData'
      deprecated: true
    post:
      tags:
      - resource-group-endpoint
      operationId: createResourceGroup
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourceGroupData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupEssentialData'
  /api/mlpgate/account/{account}/resource-groups/{groupName}:
    get:
      tags:
      - resource-group-endpoint
      operationId: getResourceGroupData
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupEssentialData'
    post:
      tags:
      - resource-group-endpoint
      operationId: updateResourceGroup
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResourceGroupData'
        required: true
      responses:
        "200":
          description: OK
    delete:
      tags:
      - resource-group-endpoint
      operationId: deleteResourceGroup
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate/account/{account}/resource-groups/{groupName}/server:
    get:
      tags:
      - resource-group-servers-endpoint
      operationId: getServersData
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceGroupServerData'
    post:
      tags:
      - resource-group-servers-endpoint
      operationId: addServerConfiguration
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourceGroupServer'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupServerData'
  /api/mlpgate/account/{account}/resource-groups/{groupName}/server/{serverId}/copy:
    post:
      tags:
      - resource-group-servers-endpoint
      operationId: copyServerConfiguration
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyResourceGroupServer'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupServerData'
  /api/mlpgate/account/{account}/model:
    get:
      tags:
      - model-endpoint
      operationId: getPagedModels
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: onlyMy
        in: query
        required: false
        schema:
          type: boolean
      - name: withFavorites
        in: query
        required: false
        schema:
          type: boolean
      - name: accountField
        in: query
        required: false
        schema:
          type: string
      - name: modelField
        in: query
        required: false
        schema:
          type: string
      - name: onlyPublic
        in: query
        required: false
        schema:
          type: boolean
      - name: groupId
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: taskType
        in: query
        required: false
        schema:
          type: string
      - name: language
        in: query
        required: false
        schema:
          type: string
      - name: imageId
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: dataImageId
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelInfoData'
    post:
      tags:
      - model-endpoint
      operationId: createModel
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelCreateUpdateData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfoData'
  /api/mlpgate/account/{account}/model/{model}:
    get:
      tags:
      - model-endpoint
      operationId: getModelInfo
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfoData'
    post:
      tags:
      - model-endpoint
      operationId: updateModel
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelCreateUpdateData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfoData'
    delete:
      tags:
      - model-endpoint
      operationId: deleteModel
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate/account/{account}/model/{model}/tts:
    get:
      tags:
      - process-endpoint
      operationId: ttsStreamGet
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: text
        in: query
        required: true
        schema:
          type: string
      - name: voice
        in: query
        required: false
        schema:
          type: string
      - name: audioEncoding
        in: query
        required: false
        schema:
          type: string
          enum:
          - LINEAR16_PCM
      - name: sampleRateHertz
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: chunkSizeKb
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ResponseBodyEmitter'
    post:
      tags:
      - process-endpoint
      operationId: ttsStreamPost
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TtsRequestData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ResponseBodyEmitter'
  /api/mlpgate/account/{account}/model/{model}/simple-doc:
    get:
      tags:
      - model-endpoint
      operationId: getSimpleDoc
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            text/plain;charset=UTF-8:
              schema:
                type: string
    post:
      tags:
      - model-endpoint
      operationId: setSimpleDoc
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/plain;charset=UTF-8:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/mlpgate/account/{account}/model/{model}/public-settings:
    get:
      tags:
      - model-endpoint
      operationId: getModelPublicSettings
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelPublicSettingsData'
    post:
      tags:
      - model-endpoint
      operationId: updateModelPublicSettings
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelPublicSettingsData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelPublicSettingsData'
  /api/mlpgate/account/{account}/model/{model}/predict:
    post:
      tags:
      - process-endpoint
      operationId: predict
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: configId
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/mlpgate/account/{account}/model/{model}/predict-with-config:
    post:
      tags:
      - process-endpoint
      operationId: predictWithConfig
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PredictRequestData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/mlpgate/account/{account}/model/{model}/predict-with-config-v2:
    post:
      tags:
      - process-endpoint
      operationId: predictWithConfig_v2
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Predict2RequestData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/mlpgate/account/{account}/model/{model}/predict-config:
    get:
      tags:
      - predict-config-endpoint
      operationId: listPredictConfigs
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PredictConfigData'
    post:
      tags:
      - predict-config-endpoint
      operationId: createPredictConfig
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigCreateUpdateData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictConfigData'
  /api/mlpgate/account/{account}/model/{model}/predict-config/{configId}:
    get:
      tags:
      - predict-config-endpoint
      operationId: getPredictConfig
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: configId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictConfigData'
    post:
      tags:
      - predict-config-endpoint
      operationId: updatePredictConfig
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: configId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigCreateUpdateData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictConfigData'
    delete:
      tags:
      - predict-config-endpoint
      operationId: deletePredictConfig
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: configId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate/account/{account}/model/{model}/instances:
    get:
      tags:
      - model-endpoint
      operationId: getInstancesStatus
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstancesStatusData'
    post:
      tags:
      - model-endpoint
      operationId: setRequestedInstancesCount
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              maximum: 1000
              minimum: 0
              type: integer
              format: int32
        required: true
      responses:
        "200":
          description: OK
  /api/mlpgate/account/{account}/model/{model}/instances/single:
    post:
      tags:
      - model-endpoint
      operationId: startSingleInstance
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate/account/{account}/model/{model}/instance/{instanceId}/terminate:
    post:
      tags:
      - model-instance-endpoint
      operationId: terminateInstance
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: instanceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate/account/{account}/model/{model}/instance/{instanceId}/stop:
    post:
      tags:
      - model-instance-endpoint
      operationId: stopInstance
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: instanceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate/account/{account}/model/{model}/instance/start:
    post:
      tags:
      - model-endpoint
      operationId: startNewInstance
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate/account/{account}/model/{model}/fit:
    post:
      tags:
      - process-endpoint
      operationId: fit
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FitRequestData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatusData'
  /api/mlpgate/account/{account}/model/{model}/fit-v2:
    post:
      tags:
      - process-endpoint
      operationId: fit_v2
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fit2RequestData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatusData'
  /api/mlpgate/account/{account}/model/{model}/fit-config:
    get:
      tags:
      - fit-config-endpoint
      operationId: listFitConfigs
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FitConfigData'
    post:
      tags:
      - fit-config-endpoint
      operationId: createFitConfig
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigCreateUpdateData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FitConfigData'
  /api/mlpgate/account/{account}/model/{model}/fit-config/{configId}:
    get:
      tags:
      - fit-config-endpoint
      operationId: getFitConfig
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: configId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FitConfigData'
    post:
      tags:
      - fit-config-endpoint
      operationId: updateFitConfig
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: configId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigCreateUpdateData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FitConfigData'
    delete:
      tags:
      - fit-config-endpoint
      operationId: deleteFitConfig
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: configId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate/account/{account}/model/{model}/favorite:
    post:
      tags:
      - model-endpoint
      operationId: setFavorite
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
        required: true
      responses:
        "200":
          description: OK
  /api/mlpgate/account/{account}/model/{model}/external:
    get:
      tags:
      - model-endpoint
      operationId: getExternalConnectionsInfo
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExternalConnectionInfoData'
    post:
      tags:
      - model-endpoint
      operationId: createExternalConnection
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalConnectionInfoData'
  /api/mlpgate/account/{account}/model/{model}/ext:
    post:
      tags:
      - process-endpoint
      operationId: ext
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtendedRequestData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/mlpgate/account/{account}/model/{model}/derived:
    post:
      tags:
      - model-endpoint
      operationId: createDerivedModel
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: name
        in: query
        required: true
        schema:
          type: string
      - name: hidden
        in: query
        required: false
        schema:
          type: boolean
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfoData'
  /api/mlpgate/account/{account}/model/{model}/cross-validation:
    post:
      tags:
      - process-endpoint
      operationId: crossValidation
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrossValidationRequestData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatusData'
  /api/mlpgate/account/{account}/model/{model}/clone:
    post:
      tags:
      - model-endpoint
      operationId: createClonedModel
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: name
        in: query
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfoData'
  /api/mlpgate/account/{account}/model/{model}/billing:
    get:
      tags:
      - model-endpoint
      operationId: getModelBillingSettings
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelBillingSettingsData'
    post:
      tags:
      - model-endpoint
      operationId: updateModelBillingSettings
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelBillingSettingsData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelBillingSettingsData'
  /api/mlpgate/account/{account}/model-group:
    get:
      tags:
      - model-group-endpoint
      operationId: getGroups
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModelGroupData'
    post:
      tags:
      - model-group-endpoint
      operationId: createGroup
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelGroupData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelGroupData'
    patch:
      tags:
      - model-group-endpoint
      operationId: updateGroup
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelGroupData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelGroupData'
  /api/mlpgate/account/{account}/management/{featureName}:
    post:
      tags:
      - manual-management-endpoint
      operationId: requestFeature
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagementRequestData'
        required: true
      responses:
        "200":
          description: OK
  /api/mlpgate/account/{account}/image:
    get:
      tags:
      - image-endpoint
      operationId: getPagedImages
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: name
        in: query
        required: false
        schema:
          type: string
      - name: onlyMy
        in: query
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedImageInfoData'
      deprecated: true
    post:
      tags:
      - image-endpoint
      operationId: createImage
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageInfoData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageInfoData'
  /api/mlpgate/account/{account}/image/{imageId}:
    get:
      tags:
      - image-endpoint
      operationId: getImage
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: imageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageInfoData'
    post:
      tags:
      - image-endpoint
      operationId: updateImage
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: imageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageInfoData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageInfoData'
    delete:
      tags:
      - image-endpoint
      operationId: deleteImage
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: imageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate/account/{account}/dump:
    get:
      tags:
      - account-endpoint
      operationId: dumpConfig
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - account-endpoint
      operationId: restoreConfig
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
  /api/mlpgate/account/{account}/dataset:
    get:
      tags:
      - dataset-endpoint
      operationId: listDatasets
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DatasetInfoData'
    post:
      tags:
      - dataset-endpoint
      operationId: deprecatedCreateDataset
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeprecatedDatasetInfoWithContentData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetInfoData'
      deprecated: true
  /api/mlpgate/account/{account}/dataset/{datasetId}:
    get:
      tags:
      - dataset-endpoint
      operationId: getDatasetInfo
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: datasetId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetInfoData'
    post:
      tags:
      - dataset-endpoint
      operationId: deprecatedUpdateDataset
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: datasetId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeprecatedDatasetInfoWithContentData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetInfoData'
      deprecated: true
    delete:
      tags:
      - dataset-endpoint
      operationId: deleteDataset
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: datasetId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate/account/{account}/dataset/{datasetId}/raw:
    post:
      tags:
      - dataset-endpoint
      operationId: updateDataset
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: datasetId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateDatasetInfoData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetInfoData'
  /api/mlpgate/account/{account}/dataset/{datasetId}/paraphrase:
    post:
      tags:
      - dataset-endpoint
      operationId: paraphraseDataset
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: datasetId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetInfoData'
  /api/mlpgate/account/{account}/dataset/{datasetId}/content:
    get:
      tags:
      - dataset-endpoint
      operationId: downloadDatasetRawContent
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: datasetId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: type
        in: query
        required: false
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
    post:
      tags:
      - dataset-endpoint
      operationId: uploadDatasetContent
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: datasetId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetInfoData'
  /api/mlpgate/account/{account}/dataset/raw:
    post:
      tags:
      - dataset-endpoint
      operationId: createDataset
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: name
        in: query
        required: true
        schema:
          type: string
      - name: description
        in: query
        required: false
        schema:
          type: string
      - name: dataType
        in: query
        required: false
        schema:
          type: string
      - name: accessMode
        in: query
        required: false
        schema:
          type: string
          enum:
          - private
          - public
          - restricted
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetInfoData'
  /api/mlpgate/account/{account}/dataset/empty:
    post:
      tags:
      - dataset-endpoint
      operationId: createEmptyDataset
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateDatasetInfoData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetInfoData'
  /api/mlpgate/account/{account}/data-image:
    get:
      tags:
      - data-image-endpoint
      operationId: getPagedDataImages
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: name
        in: query
        required: false
        schema:
          type: string
      - name: onlyMy
        in: query
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedDataImageInfoData'
    post:
      tags:
      - data-image-endpoint
      operationId: createDataImage
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataImageInfoData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataImageInfoData'
  /api/mlpgate/account/{account}/data-image/{imageId}:
    get:
      tags:
      - data-image-endpoint
      operationId: getDataImage
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: imageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataImageInfoData'
    post:
      tags:
      - data-image-endpoint
      operationId: updateDataImage
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: imageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataImageInfoData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataImageInfoData'
    delete:
      tags:
      - data-image-endpoint
      operationId: deleteDataImage
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: imageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate-internal/accounts/deactivate:
    post:
      tags:
      - internal-endpoint
      operationId: deactivateAccount
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate-internal/account/{account}/update-limits:
    post:
      tags:
      - internal-endpoint
      operationId: updateLimits_1
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountLimitsData'
        required: true
      responses:
        "200":
          description: OK
  /api/mlpgate-internal/account/{account}/namespace/ensure:
    post:
      tags:
      - internal-endpoint
      operationId: ensureNamespace
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate-internal/account/{account}/model/{model}/path:
    post:
      tags:
      - internal-endpoint
      operationId: updateModelDir
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
  /api/mlpgate-internal/account/{account}/model/{model}/instance/deactivate:
    post:
      tags:
      - internal-endpoint
      operationId: deactivateAccountInstances
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate-internal/account/{account}/features:
    get:
      tags:
      - internal-endpoint
      operationId: getAccountFeatures_1
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountFeatureData'
    post:
      tags:
      - internal-endpoint
      operationId: updateAccountFeatures
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountFeatureData'
        required: true
      responses:
        "200":
          description: OK
  /api/mlpgate-internal/account/{account}/bucket/deny:
    post:
      tags:
      - internal-endpoint
      operationId: removeBucketAccess
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: path
        in: query
        required: true
        schema:
          type: string
      - name: foreignAccountId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate-internal/account/{account}/bucket/access:
    post:
      tags:
      - internal-endpoint
      operationId: addBucketAccess
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: path
        in: query
        required: true
        schema:
          type: string
      - name: foreignAccountId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate/admin/resource-groups:
    get:
      tags:
      - admin-endpoint
      operationId: getResourceGroups
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupsData'
    patch:
      tags:
      - admin-endpoint
      operationId: updateResourceGroups
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceGroupsData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /api/mlpgate/account/{account}/model/{model}/model-group/{groupId}:
    patch:
      tags:
      - model-group-endpoint
      operationId: assignModelToGroup
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: groupId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate-internal/resource-groups:
    get:
      tags:
      - internal-endpoint
      operationId: getResourceGroups_1
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceGroupData'
    patch:
      tags:
      - internal-endpoint
      operationId: updateResourceGroups_1
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceGroupsData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /api/mlpgate/version:
    get:
      tags:
      - system-endpoint
      operationId: version
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/mlpgate/system-config/task-types:
    get:
      tags:
      - system-config-endpoint
      operationId: getTaskTypes
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskTypeData'
  /api/mlpgate/system-config/resource-groups:
    get:
      tags:
      - system-config-endpoint
      operationId: getResourceGroupsForAccount
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceGroupData'
  /api/mlpgate/system-config/model-defaults:
    get:
      tags:
      - system-config-endpoint
      operationId: getModelDefaults
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelDefaults'
  /api/mlpgate/system-config/frontend-settings:
    get:
      tags:
      - system-config-endpoint
      operationId: getFrontendSettings
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrontendSettings'
  /api/mlpgate/system-config/dataset-data-type:
    get:
      tags:
      - system-config-endpoint
      operationId: getDatasetDataTypes
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/mlpgate/system-config/captcha:
    get:
      tags:
      - system-config-endpoint
      operationId: getCaptchaConfig
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptchaData'
  /api/mlpgate/models:
    get:
      tags:
      - model-endpoint
      operationId: getPublicModels
      parameters:
      - name: onlyMy
        in: query
        required: false
        schema:
          type: boolean
      - name: withFavorites
        in: query
        required: false
        schema:
          type: boolean
      - name: accountField
        in: query
        required: false
        schema:
          type: string
      - name: modelField
        in: query
        required: false
        schema:
          type: string
      - name: onlyPublic
        in: query
        required: false
        schema:
          type: boolean
      - name: groupId
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: taskType
        in: query
        required: false
        schema:
          type: string
      - name: language
        in: query
        required: false
        schema:
          type: string
      - name: imageId
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: dataImageId
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelInfoData'
  /api/mlpgate/models/featured:
    get:
      tags:
      - model-endpoint
      operationId: getFeaturedModels
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModelInfoData'
  /api/mlpgate/health:
    get:
      tags:
      - system-endpoint
      operationId: healthCheck
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResult'
  /api/mlpgate/health/test:
    get:
      tags:
      - system-endpoint
      operationId: healthCheckForTests
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResult'
  /api/mlpgate/health/history:
    get:
      tags:
      - system-endpoint
      operationId: healthCheckHistory
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckHistoryResult'
  /api/mlpgate/admin/accounts:
    get:
      tags:
      - admin-endpoint
      operationId: getAccounts
      parameters:
      - name: name
        in: query
        required: false
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountInfoData'
  /api/mlpgate/admin/account/{account}:
    get:
      tags:
      - admin-endpoint
      operationId: getAccount
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInfoData'
  /api/mlpgate/account/{account}:
    get:
      tags:
      - account-endpoint
      operationId: ensureAccountWithId
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInfoData'
  /api/mlpgate/account/{account}/token/{token}:
    get:
      tags:
      - access-token-endpoint
      operationId: checkAccessToken
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: token
        in: path
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenData'
    delete:
      tags:
      - access-token-endpoint
      operationId: deleteAccessToken
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: token
        in: path
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate/account/{account}/stat-log:
    get:
      tags:
      - stat-log-endpoint
      operationId: listJobs
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatLogData'
  /api/mlpgate/account/{account}/s3:
    get:
      tags:
      - account-endpoint
      operationId: getS3Credentials
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3CredentialsData'
  /api/mlpgate/account/{account}/resource-groups/{groupName}/services:
    get:
      tags:
      - metric-endpoint
      operationId: getResourceGroupServices
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        schema:
          type: string
      - name: time
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/mlpgate/account/{account}/resource-groups/{groupName}/server/{serverId}:
    get:
      tags:
      - resource-group-servers-endpoint
      operationId: getServerData
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupServerData'
    delete:
      tags:
      - resource-group-servers-endpoint
      operationId: deleteServerConfiguration
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate/account/{account}/resource-groups/{groupName}/server/{serverId}/status:
    get:
      tags:
      - resource-group-servers-endpoint
      operationId: getServerStatus
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupServerDataWithStatus'
  /api/mlpgate/account/{account}/resource-groups/{groupName}/server/{serverId}/register:
    get:
      tags:
      - resource-group-servers-endpoint
      operationId: registerServer
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate/account/{account}/resource-groups/{groupName}/server/template:
    get:
      tags:
      - resource-group-servers-endpoint
      operationId: getTemplates
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceGroupServerData'
  /api/mlpgate/account/{account}/resource-groups/{groupName}/server/status:
    get:
      tags:
      - resource-group-servers-endpoint
      operationId: getServersStatutes
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceGroupServerDataWithStatus'
  /api/mlpgate/account/{account}/resource-groups/{groupName}/metric:
    get:
      tags:
      - metric-endpoint
      operationId: getResourceGroupMetric
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        schema:
          type: string
      - name: metrics
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
            enum:
            - NODE_CPU_USAGE
            - NODE_CPU_REQUESTED
            - NODE_CPU_CAPACITY
            - NODE_CPU_ALLOCATABLE_CAPACITY
            - NODE_RAM_USAGE
            - NODE_RAM_REQUESTED
            - NODE_RAM_CAPACITY
            - NODE_RAM_ALLOCATABLE_CAPACITY
            - NODE_DISK_USAGE
            - NODE_EPHEMERAL_DISK_REQUESTED
            - NODE_EPHEMERAL_DISK_CAPACITY
            - NODE_EPHEMERAL_DISK_ALLOCATABLE_CAPACITY
            - NODE_GPU_PODS_COUNT
            - NODE_GPU_PODS_LIMIT
            - NODE_GPU_USAGE
            - NODE_GPU_LIMIT
            - NODE_VRAM_USAGE
            - NODE_VRAM_LIMIT
      - name: time
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: nodeName
        in: query
        required: false
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: number
                  format: double
  /api/mlpgate/account/{account}/resource-groups/{groupName}/metric/start-time:
    get:
      tags:
      - metric-endpoint
      operationId: getEarliestTimestampOfResourceGroupMetric
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        schema:
          type: string
      - name: metric
        in: query
        required: true
        schema:
          type: string
          enum:
          - NODE_CPU_USAGE
          - NODE_CPU_REQUESTED
          - NODE_CPU_CAPACITY
          - NODE_CPU_ALLOCATABLE_CAPACITY
          - NODE_RAM_USAGE
          - NODE_RAM_REQUESTED
          - NODE_RAM_CAPACITY
          - NODE_RAM_ALLOCATABLE_CAPACITY
          - NODE_DISK_USAGE
          - NODE_EPHEMERAL_DISK_REQUESTED
          - NODE_EPHEMERAL_DISK_CAPACITY
          - NODE_EPHEMERAL_DISK_ALLOCATABLE_CAPACITY
          - NODE_GPU_PODS_COUNT
          - NODE_GPU_PODS_LIMIT
          - NODE_GPU_USAGE
          - NODE_GPU_LIMIT
          - NODE_VRAM_USAGE
          - NODE_VRAM_LIMIT
      - name: nodeName
        in: query
        required: false
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int64
  /api/mlpgate/account/{account}/resource-groups/{groupName}/metric-range:
    get:
      tags:
      - metric-endpoint
      operationId: getResourceMetricRange
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        schema:
          type: string
      - name: metrics
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
            enum:
            - NODE_CPU_USAGE
            - NODE_CPU_REQUESTED
            - NODE_CPU_CAPACITY
            - NODE_CPU_ALLOCATABLE_CAPACITY
            - NODE_RAM_USAGE
            - NODE_RAM_REQUESTED
            - NODE_RAM_CAPACITY
            - NODE_RAM_ALLOCATABLE_CAPACITY
            - NODE_DISK_USAGE
            - NODE_EPHEMERAL_DISK_REQUESTED
            - NODE_EPHEMERAL_DISK_CAPACITY
            - NODE_EPHEMERAL_DISK_ALLOCATABLE_CAPACITY
            - NODE_GPU_PODS_COUNT
            - NODE_GPU_PODS_LIMIT
            - NODE_GPU_USAGE
            - NODE_GPU_LIMIT
            - NODE_VRAM_USAGE
            - NODE_VRAM_LIMIT
      - name: minutes
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: stepSeconds
        in: query
        required: false
        schema:
          type: integer
          format: int64
          default: 60
      - name: nodeName
        in: query
        required: false
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/Measurement'
  /api/mlpgate/account/{account}/resource-groups/{groupName}/logs:
    get:
      tags:
      - resource-group-endpoint
      operationId: getLogsByResourceGroup
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatLogData'
  /api/mlpgate/account/{account}/resource-groups/{groupName}/logs/page:
    get:
      tags:
      - resource-group-endpoint
      operationId: getPageableLogsByResourceGroup
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        schema:
          type: string
      - name: minutes
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageStatLogData'
  /api/mlpgate/account/{account}/resource-groups/{groupName}/capacity:
    get:
      tags:
      - resource-group-endpoint
      operationId: getResourceGroupCapacity
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupCapacity'
  /api/mlpgate/account/{account}/resource-groups/{groupName}/capacity/logs:
    get:
      tags:
      - resource-group-endpoint
      operationId: getLogsByResourceGroupCapacity
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        schema:
          type: string
      - name: serverName
        in: query
        required: false
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatLogData'
  /api/mlpgate/account/{account}/resource-groups/{groupName}/capacity/logs/page:
    get:
      tags:
      - resource-group-endpoint
      operationId: getPageableLogsByResourceGroupCapacity
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        schema:
          type: string
      - name: minutes
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        schema:
          type: string
      - name: serverName
        in: query
        required: false
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageStatLogData'
  /api/mlpgate/account/{account}/resource-groups/{groupName}/active-services:
    get:
      tags:
      - resource-group-endpoint
      operationId: getResourceGroupActiveServices
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupServicesData'
  /api/mlpgate/account/{account}/resource-group-types:
    get:
      tags:
      - resource-group-endpoint
      operationId: getSupportedGroupTypes
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  enum:
                  - DOCKER
                  - KUBERNETES
                  - HOSTING_SERVER
  /api/mlpgate/account/{account}/owned-resource-groups:
    get:
      tags:
      - resource-group-endpoint
      operationId: getOwnedResourceGroups
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceGroupEssentialData'
  /api/mlpgate/account/{account}/owned-resource-groups/short-status:
    get:
      tags:
      - resource-group-endpoint
      operationId: getOwnedResourceGroupsShortStatus
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceGroupShortStatusData'
  /api/mlpgate/account/{account}/models/metric:
    get:
      tags:
      - metric-endpoint
      operationId: getModelsMetric
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: time
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: metrics
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
            enum:
            - MODEL_CPU_USAGE
            - MODEL_CPU_REQUESTED
            - MODEL_CPU_LIMIT
            - MODEL_RAM_USAGE
            - MODEL_RAM_REQUESTED
            - MODEL_RAM_LIMIT
            - MODEL_RECONNECTS_COUNT
            - MODEL_INSTANCES_COUNT
            - MODEL_GPU_REQUESTED
            - MODEL_EPHEMERAL_DISK_REQUESTED
            - MODEL_SUCCESS_REQUESTS_COUNT
            - MODEL_FAILED_REQUESTS_COUNT
            - MODEL_ACTIVE_REQUESTS_COUNT
            - MODEL_AVERAGE_REQUEST_TIME
            - MODEL_MIN_REQUEST_TIME
            - MODEL_MAX_REQUEST_TIME
            - MODEL_INSTANT_REQUEST_TIME
      - name: models
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    type: number
                    format: double
  /api/mlpgate/account/{account}/model/{model}/status:
    get:
      tags:
      - model-endpoint
      operationId: shortModelStatus
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelShortStatusData'
  /api/mlpgate/account/{account}/model/{model}/metric:
    get:
      tags:
      - metric-endpoint
      operationId: getModelMetric
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: time
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: metrics
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
            enum:
            - MODEL_CPU_USAGE
            - MODEL_CPU_REQUESTED
            - MODEL_CPU_LIMIT
            - MODEL_RAM_USAGE
            - MODEL_RAM_REQUESTED
            - MODEL_RAM_LIMIT
            - MODEL_RECONNECTS_COUNT
            - MODEL_INSTANCES_COUNT
            - MODEL_GPU_REQUESTED
            - MODEL_EPHEMERAL_DISK_REQUESTED
            - MODEL_SUCCESS_REQUESTS_COUNT
            - MODEL_FAILED_REQUESTS_COUNT
            - MODEL_ACTIVE_REQUESTS_COUNT
            - MODEL_AVERAGE_REQUEST_TIME
            - MODEL_MIN_REQUEST_TIME
            - MODEL_MAX_REQUEST_TIME
            - MODEL_INSTANT_REQUEST_TIME
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: number
                  format: double
  /api/mlpgate/account/{account}/model/{model}/metric/start-time:
    get:
      tags:
      - metric-endpoint
      operationId: getEarliestTimestampOfModelMetric
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: metric
        in: query
        required: true
        schema:
          type: string
          enum:
          - MODEL_CPU_USAGE
          - MODEL_CPU_REQUESTED
          - MODEL_CPU_LIMIT
          - MODEL_RAM_USAGE
          - MODEL_RAM_REQUESTED
          - MODEL_RAM_LIMIT
          - MODEL_RECONNECTS_COUNT
          - MODEL_INSTANCES_COUNT
          - MODEL_GPU_REQUESTED
          - MODEL_EPHEMERAL_DISK_REQUESTED
          - MODEL_SUCCESS_REQUESTS_COUNT
          - MODEL_FAILED_REQUESTS_COUNT
          - MODEL_ACTIVE_REQUESTS_COUNT
          - MODEL_AVERAGE_REQUEST_TIME
          - MODEL_MIN_REQUEST_TIME
          - MODEL_MAX_REQUEST_TIME
          - MODEL_INSTANT_REQUEST_TIME
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int64
  /api/mlpgate/account/{account}/model/{model}/metric-range:
    get:
      tags:
      - metric-endpoint
      operationId: getModelMetricRange
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: metrics
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
            enum:
            - MODEL_CPU_USAGE
            - MODEL_CPU_REQUESTED
            - MODEL_CPU_LIMIT
            - MODEL_RAM_USAGE
            - MODEL_RAM_REQUESTED
            - MODEL_RAM_LIMIT
            - MODEL_RECONNECTS_COUNT
            - MODEL_INSTANCES_COUNT
            - MODEL_GPU_REQUESTED
            - MODEL_EPHEMERAL_DISK_REQUESTED
            - MODEL_SUCCESS_REQUESTS_COUNT
            - MODEL_FAILED_REQUESTS_COUNT
            - MODEL_ACTIVE_REQUESTS_COUNT
            - MODEL_AVERAGE_REQUEST_TIME
            - MODEL_MIN_REQUEST_TIME
            - MODEL_MAX_REQUEST_TIME
            - MODEL_INSTANT_REQUEST_TIME
      - name: minutes
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: stepSeconds
        in: query
        required: false
        schema:
          type: integer
          format: int64
          default: 60
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/Measurement'
  /api/mlpgate/account/{account}/model/{model}/logs:
    get:
      tags:
      - model-endpoint
      operationId: getLogsByModel
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatLogData'
  /api/mlpgate/account/{account}/model/{model}/last-job:
    get:
      tags:
      - model-endpoint
      operationId: lastJob
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatusData'
  /api/mlpgate/account/{account}/model/{model}/instance:
    get:
      tags:
      - model-instance-endpoint
      operationId: getModelInstances
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInstanceListData'
  /api/mlpgate/account/{account}/model/{model}/instance/{instanceId}/timing:
    get:
      tags:
      - model-instance-endpoint
      operationId: getModelInstanceStartTime
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: instanceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelStartTimeData'
  /api/mlpgate/account/{account}/model/{model}/instance/{instanceId}/metric:
    get:
      tags:
      - metric-endpoint
      operationId: getInstanceMetric
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: instanceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: metrics
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
            enum:
            - INSTANCE_CPU_USAGE
            - INSTANCE_CPU_REQUESTED
            - INSTANCE_CPU_LIMIT
            - INSTANCE_RAM_USAGE
            - INSTANCE_RAM_REQUESTED
            - INSTANCE_RAM_LIMIT
            - INSTANCE_RECONNECTS_COUNT
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: number
                  format: double
  /api/mlpgate/account/{account}/model/{model}/instance/{instanceId}/metric/start-time:
    get:
      tags:
      - metric-endpoint
      operationId: getEarliestTimestampOfInstanceMetric
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: instanceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: metric
        in: query
        required: true
        schema:
          type: string
          enum:
          - INSTANCE_CPU_USAGE
          - INSTANCE_CPU_REQUESTED
          - INSTANCE_CPU_LIMIT
          - INSTANCE_RAM_USAGE
          - INSTANCE_RAM_REQUESTED
          - INSTANCE_RAM_LIMIT
          - INSTANCE_RECONNECTS_COUNT
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int64
  /api/mlpgate/account/{account}/model/{model}/instance/{instanceId}/metric-range:
    get:
      tags:
      - metric-endpoint
      operationId: getInstanceMetricRange
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: instanceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: metrics
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
            enum:
            - INSTANCE_CPU_USAGE
            - INSTANCE_CPU_REQUESTED
            - INSTANCE_CPU_LIMIT
            - INSTANCE_RAM_USAGE
            - INSTANCE_RAM_REQUESTED
            - INSTANCE_RAM_LIMIT
            - INSTANCE_RECONNECTS_COUNT
      - name: minutes
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: stepSeconds
        in: query
        required: false
        schema:
          type: integer
          format: int64
          default: 60
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/Measurement'
  /api/mlpgate/account/{account}/model/{model}/instance/{instanceId}/laststate:
    get:
      tags:
      - model-instance-endpoint
      operationId: getModelInstanceLastState
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: instanceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceLastState'
  /api/mlpgate/account/{account}/model/{model}/instance/{instanceId}/file:
    get:
      tags:
      - model-instance-endpoint
      operationId: getInstancePodFile
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: instanceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: path
        in: query
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
  /api/mlpgate/account/{account}/model/{model}/instance/{instanceId}/file/logs:
    get:
      tags:
      - model-instance-endpoint
      operationId: getInstanceLogFile
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: instanceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: previousContainer
        in: query
        required: false
        schema:
          type: boolean
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
  /api/mlpgate/account/{account}/model/{model}/instance/{instanceId}/events:
    get:
      tags:
      - model-instance-endpoint
      operationId: getInstanceEvents
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: instanceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceEventData'
  /api/mlpgate/account/{account}/model/{model}/instance/{instanceId}/environment:
    get:
      tags:
      - model-instance-endpoint
      operationId: getModelInstanceEnvironment
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: instanceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceEnvironmentData'
  /api/mlpgate/account/{account}/model/{model}/dataset/allowed:
    get:
      tags:
      - dataset-endpoint
      operationId: getAllowedDatasetsForFit
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DatasetInfoData'
  /api/mlpgate/account/{account}/model/{model}/dataset/allowed-types:
    get:
      tags:
      - dataset-endpoint
      operationId: getAllowedDataTypesForFit
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  type: string
  /api/mlpgate/account/{account}/model/{model}/action-descriptor:
    get:
      tags:
      - model-endpoint
      operationId: getServiceDescriptor
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDescriptorData'
  /api/mlpgate/account/{account}/metric:
    get:
      tags:
      - metric-endpoint
      operationId: getAccountMetric
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: metrics
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
            enum:
            - ACCOUNT_CPU_USAGE
            - ACCOUNT_CPU_REQUESTED
            - ACCOUNT_CPU_LIMIT
            - ACCOUNT_RAM_USAGE
            - ACCOUNT_RAM_REQUESTED
            - ACCOUNT_RAM_LIMIT
            - ACCOUNT_DISK_REQUESTED
            - ACCOUNT_DISK_LIMIT
            - ACCOUNT_GPU_REQUESTED
            - ACCOUNT_GPU_LIMIT
            - ACCOUNT_PREDICTS_COUNT_PER_MINUTE_TOTAL
            - ACCOUNT_PREDICTS_COUNT_PER_MINUTE_EXCEEDED
            - ACCOUNT_FITS_COUNT_PER_MINUTE_TOTAL
            - ACCOUNT_FITS_COUNT_PER_MINUTE_EXCEEDED
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: number
                  format: double
  /api/mlpgate/account/{account}/metric/start-time:
    get:
      tags:
      - metric-endpoint
      operationId: getEarliestTimestampOfAccountMetric
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: metric
        in: query
        required: true
        schema:
          type: string
          enum:
          - ACCOUNT_CPU_USAGE
          - ACCOUNT_CPU_REQUESTED
          - ACCOUNT_CPU_LIMIT
          - ACCOUNT_RAM_USAGE
          - ACCOUNT_RAM_REQUESTED
          - ACCOUNT_RAM_LIMIT
          - ACCOUNT_DISK_REQUESTED
          - ACCOUNT_DISK_LIMIT
          - ACCOUNT_GPU_REQUESTED
          - ACCOUNT_GPU_LIMIT
          - ACCOUNT_PREDICTS_COUNT_PER_MINUTE_TOTAL
          - ACCOUNT_PREDICTS_COUNT_PER_MINUTE_EXCEEDED
          - ACCOUNT_FITS_COUNT_PER_MINUTE_TOTAL
          - ACCOUNT_FITS_COUNT_PER_MINUTE_EXCEEDED
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int64
  /api/mlpgate/account/{account}/metric-range:
    get:
      tags:
      - metric-endpoint
      operationId: getAccountMetricRange
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: metrics
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
            enum:
            - ACCOUNT_CPU_USAGE
            - ACCOUNT_CPU_REQUESTED
            - ACCOUNT_CPU_LIMIT
            - ACCOUNT_RAM_USAGE
            - ACCOUNT_RAM_REQUESTED
            - ACCOUNT_RAM_LIMIT
            - ACCOUNT_DISK_REQUESTED
            - ACCOUNT_DISK_LIMIT
            - ACCOUNT_GPU_REQUESTED
            - ACCOUNT_GPU_LIMIT
            - ACCOUNT_PREDICTS_COUNT_PER_MINUTE_TOTAL
            - ACCOUNT_PREDICTS_COUNT_PER_MINUTE_EXCEEDED
            - ACCOUNT_FITS_COUNT_PER_MINUTE_TOTAL
            - ACCOUNT_FITS_COUNT_PER_MINUTE_EXCEEDED
      - name: minutes
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: stepSeconds
        in: query
        required: false
        schema:
          type: integer
          format: int64
          default: 60
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/Measurement'
  /api/mlpgate/account/{account}/job:
    get:
      tags:
      - job-endpoint
      operationId: listJobs_1
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobStatusData'
  /api/mlpgate/account/{account}/job/{jobId}:
    get:
      tags:
      - job-endpoint
      operationId: jobStatus
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: jobId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatusData'
  /api/mlpgate/account/{account}/image/{imageId}/logs:
    get:
      tags:
      - image-endpoint
      operationId: getLogsByImage
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: imageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatLogData'
  /api/mlpgate/account/{account}/image-v2:
    get:
      tags:
      - image-endpoint
      operationId: getPagedImages_v2
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: name
        in: query
        required: false
        schema:
          type: string
      - name: belonging
        in: query
        required: false
        schema:
          type: string
          enum:
          - ALL
          - MINE
          - MINE_PUBLIC
          - MINE_RESTRICTED
          - MINE_PRIVATE
          - NOT_MINE
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedImageInfoData'
  /api/mlpgate/account/{account}/deployable-resource-groups:
    get:
      tags:
      - resource-group-endpoint
      operationId: getDeployableResourceGroups
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceGroupEssentialData'
  /api/mlpgate/account/{account}/dataset/{originalDatasetId}/paraphrase:
    get:
      tags:
      - dataset-endpoint
      operationId: getParaphrasedDatasetStatus
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: originalDatasetId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParaphrasingStatus'
  /api/mlpgate-internal/test-mail:
    get:
      tags:
      - internal-endpoint
      operationId: sendTestEMail
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate-internal/start-one-instance:
    get:
      tags:
      - internal-endpoint
      operationId: startOneInstance
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/mlpgate-internal/set-public-for-all:
    get:
      tags:
      - internal-endpoint
      operationId: setPublicForAll
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/mlpgate-internal/services:
    get:
      tags:
      - internal-endpoint
      operationId: listRegisteredServices
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModelInstance'
  /api/mlpgate-internal/pg-test/{account}:
    get:
      tags:
      - internal-endpoint
      operationId: postgresTest
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInfoData'
  /api/mlpgate-internal/notify/{account}/user/{userId}:
    get:
      tags:
      - internal-endpoint
      operationId: pushNotification
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate-internal/empty-test:
    get:
      tags:
      - internal-endpoint
      operationId: postgresTest_1
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate-internal/cluster:
    get:
      tags:
      - internal-endpoint
      operationId: cluster
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/mlpgate-internal/clear-public-for-all:
    get:
      tags:
      - internal-endpoint
      operationId: clearPublicForAll
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/mlpgate-internal/clear-instances:
    get:
      tags:
      - internal-endpoint
      operationId: clearAllInstances
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/mlpgate-internal/clear-account:
    get:
      tags:
      - internal-endpoint
      operationId: clearAccount
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/mlpgate-internal/actions:
    get:
      tags:
      - internal-endpoint
      operationId: listAllConnectedActions
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/mlpgate-internal/account:
    get:
      tags:
      - internal-endpoint
      operationId: createTestAccount
      parameters:
      - name: testName
        in: query
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInfoData'
  /api/mlpgate-internal/account/{account}/model/{model}/instances:
    get:
      tags:
      - internal-endpoint
      operationId: getAccountInstancesWithDeleted
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModelInstance'
  /api/mlpgate-internal/account/{account}/model/{model}/actions:
    get:
      tags:
      - internal-endpoint
      operationId: listConnectedActions
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/mlpgate/account/{account}/model/{model}/model-group:
    delete:
      tags:
      - model-group-endpoint
      operationId: removeModelFromGroup
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate/account/{account}/model/{model}/external/{instanceId}:
    delete:
      tags:
      - model-endpoint
      operationId: deleteExternalConnection
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: model
        in: path
        description: Model id or model name
        required: true
        schema:
          type: string
      - name: instanceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExternalConnectionInfoData'
  /api/mlpgate/account/{account}/model-group/{groupId}:
    delete:
      tags:
      - model-group-endpoint
      operationId: deleteGroup
      parameters:
      - name: account
        in: path
        description: Account id or account name
        required: true
        schema:
          type: string
      - name: groupId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/mlpgate-internal/instances/deleteByTimestamp:
    delete:
      tags:
      - internal-endpoint
      operationId: deleteMarkedInstances
      parameters:
      - name: MLP-API-KEY
        in: header
        description: token to use instead of a session
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
components:
  schemas:
    AccountDataDump:
      type: object
      properties:
        apiTokens:
          type: array
          items:
            type: string
        modelGroups:
          type: array
          items:
            $ref: '#/components/schemas/ModelGroupDump'
        images:
          type: array
          items:
            $ref: '#/components/schemas/ImageDump'
        dataImages:
          type: array
          items:
            $ref: '#/components/schemas/DataImageDump'
        models:
          type: array
          items:
            $ref: '#/components/schemas/ModelDump'
    DataImageDump:
      required:
      - dataPath
      - image
      - name
      type: object
      properties:
        name:
          type: string
        image:
          type: string
        dataPath:
          type: string
        accessMode:
          type: string
          enum:
          - private
          - public
          - restricted
    DataImageMountDump:
      required:
      - image
      - targetPath
      type: object
      properties:
        imageAccount:
          type: string
        image:
          type: string
        targetPath:
          type: string
    DifferenceIAccountDataDump:
      type: object
      properties:
        before:
          $ref: '#/components/schemas/AccountDataDump'
        after:
          $ref: '#/components/schemas/AccountDataDump'
    DocumentDump:
      required:
      - content
      - filename
      type: object
      properties:
        filename:
          type: string
        content:
          type: string
    FitConfigDump:
      required:
      - config
      - isDefault
      - name
      type: object
      properties:
        name:
          type: string
        config:
          type: string
        isDefault:
          type: boolean
    ImageDump:
      required:
      - image
      - name
      type: object
      properties:
        name:
          type: string
        image:
          type: string
        accessMode:
          type: string
          enum:
          - private
          - public
          - restricted
    ModelBatchesData:
      required:
      - batchSize
      - timeWaitMs
      type: object
      properties:
        batchSize:
          type: integer
          format: int32
        timeWaitMs:
          type: integer
          format: int64
        maxLengthToSkip:
          type: integer
          format: int64
    ModelBillingSettingsData:
      required:
      - isBillingEnabled
      type: object
      properties:
        isBillingEnabled:
          type: boolean
        billingUnit:
          type: string
          enum:
          - calls
          - bytes
          - custom
        billingUnitPriceInNanoToken:
          type: integer
          format: int64
        billingUnitPriceInRubles:
          type: number
          format: double
        freeUnitQuota:
          type: integer
          format: int32
    ModelCachingData:
      required:
      - collectionName
      - enabled
      - mongoUri
      - recordsLimit
      type: object
      properties:
        enabled:
          type: boolean
        mongoUri:
          type: string
        collectionName:
          type: string
        recordsLimit:
          type: integer
          format: int64
    ModelDump:
      required:
      - asBillingSettingsData
      - asPublicSettingsData
      - docs
      - fitConfigs
      - image
      - name
      - predictConfigs
      type: object
      properties:
        name:
          type: string
        imageAccount:
          type: string
        image:
          type: string
        modelGroup:
          type: string
        isPublic:
          type: boolean
        config:
          type: object
        env:
          type: object
        trainingModelAccount:
          type: string
        trainingModelName:
          type: string
        trainingDatasetAccount:
          type: string
        trainingDatasetName:
          type: string
        trainingFitConfigName:
          type: string
        taskType:
          type: string
        trainingDatasetType:
          type: string
        fitTemplateModelName:
          type: string
        composite:
          type: boolean
        fittable:
          type: boolean
        trainingType:
          type: string
          enum:
          - singleContainer
          - multipleFit
        hostingType:
          type: string
          enum:
          - EXTERNAL
          - INTERNAL
          - HOSTING_SERVER
        dataImageMounts:
          type: array
          items:
            $ref: '#/components/schemas/DataImageMountDump'
        timeouts:
          $ref: '#/components/schemas/ModelTimeoutsData'
        limits:
          $ref: '#/components/schemas/ModelLimitsData'
        retries:
          $ref: '#/components/schemas/ModelRetriesData'
        batches:
          $ref: '#/components/schemas/ModelBatchesData'
        caching:
          $ref: '#/components/schemas/ModelCachingData'
        priorityQueue:
          $ref: '#/components/schemas/ModelPriorityQueueData'
        docs:
          type: array
          items:
            $ref: '#/components/schemas/DocumentDump'
        predictConfigs:
          type: array
          items:
            $ref: '#/components/schemas/PredictConfigDump'
        fitConfigs:
          type: array
          items:
            $ref: '#/components/schemas/FitConfigDump'
        resourceGroup:
          type: string
        shortDescription:
          type: string
        languages:
          uniqueItems: true
          type: array
          items:
            type: string
        availableInJaicp:
          type: boolean
        featured:
          type: boolean
        featuredListOrder:
          type: integer
          format: int32
        minInstancesCount:
          type: integer
          format: int32
        startTimeSec:
          type: number
          format: float
        hidden:
          type: boolean
        publicTestingAllowed:
          type: boolean
        isBillingEnabled:
          type: boolean
        billingUnit:
          type: string
          enum:
          - calls
          - bytes
          - custom
        billingUnitPriceInNanoToken:
          type: integer
          format: int64
        freeUnitQuota:
          type: integer
          format: int32
        asBillingSettingsData:
          $ref: '#/components/schemas/ModelBillingSettingsData'
        asPublicSettingsData:
          $ref: '#/components/schemas/ModelPublicSettingsData'
    ModelGroupDump:
      required:
      - name
      type: object
      properties:
        name:
          type: string
    ModelLimitsData:
      required:
      - cpuRequest
      - ephemeralDiskLimit
      - gpuRequested
      - memoryLimit
      type: object
      properties:
        cpuRequest:
          type: string
        memoryLimit:
          type: string
        ephemeralDiskLimit:
          type: string
        gpuRequested:
          type: boolean
    ModelPriorityQueueData:
      required:
      - concurrencyLevel
      - enabled
      type: object
      properties:
        enabled:
          type: boolean
        concurrencyLevel:
          type: integer
          format: int32
    ModelPublicSettingsData:
      type: object
      properties:
        isPublic:
          type: boolean
        availableInJaicp:
          type: boolean
        featured:
          type: boolean
        featuredListOrder:
          type: integer
          format: int32
        hidden:
          type: boolean
        publicTestingAllowed:
          type: boolean
    ModelRetriesData:
      required:
      - maxRetries
      - timeoutsMs
      type: object
      properties:
        maxRetries:
          type: integer
          format: int32
        timeoutsMs:
          type: array
          items:
            type: integer
            format: int64
        maxRetriesPerInstance:
          type: integer
          format: int32
    ModelTimeoutsData:
      required:
      - podStartTimeoutSec
      - predictTimeoutSec
      type: object
      properties:
        podStartTimeoutSec:
          type: integer
          format: int64
        predictTimeoutSec:
          type: integer
          format: int64
        fitTimeoutSec:
          type: integer
          format: int64
    PredictConfigDump:
      required:
      - config
      - isDefault
      - name
      type: object
      properties:
        name:
          type: string
        config:
          type: string
        isDefault:
          type: boolean
    AccountConfigDump:
      required:
      - accountName
      type: object
      properties:
        accountName:
          type: string
        accountLimits:
          $ref: '#/components/schemas/AccountLimitsData'
        language:
          type: string
          enum:
          - RU
          - EN
        tags:
          type: object
          additionalProperties:
            type: string
        accountDisplayName:
          type: string
    AccountLimitsData:
      required:
      - baseModelInstanceLimit
      - cpuLimit
      - derivedModelInstanceLimit
      - ephemeralDiskLimit
      - fitPerMinute
      - gpuModelInstanceLimit
      - memoryLimit
      - predictPerSec
      type: object
      properties:
        baseModelInstanceLimit:
          type: integer
          format: int32
        derivedModelInstanceLimit:
          type: integer
          format: int32
        gpuModelInstanceLimit:
          type: integer
          format: int32
        cpuLimit:
          type: string
        memoryLimit:
          type: string
        ephemeralDiskLimit:
          type: string
        predictPerSec:
          type: integer
          format: int32
        fitPerMinute:
          type: integer
          format: int32
    DifferenceIAccountConfigDump:
      type: object
      properties:
        before:
          $ref: '#/components/schemas/AccountConfigDump'
        after:
          $ref: '#/components/schemas/AccountConfigDump'
    AccountInfoData:
      required:
      - accountId
      - limits
      - shortName
      type: object
      properties:
        accountId:
          type: integer
          format: int64
        shortName:
          type: string
        limits:
          $ref: '#/components/schemas/AccountLimitsData'
        language:
          type: string
          enum:
          - RU
          - EN
        tags:
          type: object
          additionalProperties:
            type: string
        displayName:
          type: string
        lastActivity:
          type: integer
          format: int64
    AccountFeatureData:
      required:
      - features
      type: object
      properties:
        features:
          type: array
          items:
            $ref: '#/components/schemas/FeatureData'
    FeatureData:
      required:
      - enabled
      - name
      type: object
      properties:
        name:
          type: string
        enabled:
          type: boolean
    AccessTokenData:
      required:
      - creationDate
      - name
      - token
      type: object
      properties:
        token:
          type: string
        name:
          type: string
        creationDate:
          type: string
    CreateResourceGroupData:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        isDefault:
          type: boolean
        enabledAutoScaling:
          type: boolean
        enabledEviction:
          type: boolean
        resourceGroupType:
          type: string
          enum:
          - DOCKER
          - KUBERNETES
          - HOSTING_SERVER
        access:
          type: string
          enum:
          - PRIVATE
          - PUBLIC
    ResourceGroupEssentialData:
      required:
      - access
      - enabledAutoScaling
      - enabledEviction
      - isDefault
      - name
      - ownerId
      - resourceGroupType
      type: object
      properties:
        name:
          type: string
        ownerId:
          type: integer
          format: int64
        isDefault:
          type: boolean
        enabledAutoScaling:
          type: boolean
        enabledEviction:
          type: boolean
        resourceGroupType:
          type: string
          enum:
          - DOCKER
          - KUBERNETES
          - HOSTING_SERVER
        access:
          type: string
          enum:
          - PRIVATE
          - PUBLIC
    UpdateResourceGroupData:
      type: object
      properties:
        isDefault:
          type: boolean
        enabledAutoScaling:
          type: boolean
        enabledEviction:
          type: boolean
    CreateResourceGroupServer:
      required:
      - rawConfiguration
      - serverName
      type: object
      properties:
        serverName:
          type: string
        rawConfiguration:
          type: string
    ResourceGroupServerData:
      required:
      - id
      - name
      - rawConfiguration
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        rawConfiguration:
          type: string
    CopyResourceGroupServer:
      required:
      - serverName
      type: object
      properties:
        serverName:
          type: string
    DataImageMountData:
      required:
      - dataImageAccountId
      - dataImageId
      - targetPath
      type: object
      properties:
        dmId:
          type: integer
          format: int64
        dataImageAccountId:
          type: integer
          format: int64
        dataImageId:
          type: integer
          format: int64
        dataImage:
          type: string
        dataImageName:
          type: string
        sourcePath:
          type: string
        targetPath:
          type: string
    ModelCreateUpdateData:
      required:
      - modelName
      type: object
      properties:
        modelName:
          type: string
        imageAccountId:
          type: integer
          format: int64
        imageId:
          type: integer
          format: int64
        trainingModelAccountId:
          type: integer
          format: int64
        trainingModelId:
          type: integer
          format: int64
        trainingType:
          type: string
          enum:
          - singleContainer
          - multipleFit
        trainingDatasetAccountId:
          type: integer
          format: int64
        trainingDatasetId:
          type: integer
          format: int64
        trainingFitConfigId:
          type: integer
          format: int64
        taskType:
          type: string
        trainingDatasetType:
          type: string
        fitTemplateModelId:
          type: integer
          format: int64
        composite:
          type: boolean
        config:
          type: string
        env:
          type: string
        fittable:
          type: boolean
        hostingType:
          type: string
          enum:
          - EXTERNAL
          - INTERNAL
          - HOSTING_SERVER
        persistentVolumes:
          type: array
          items:
            $ref: '#/components/schemas/PersistentVolumeData'
        dataImageMounts:
          type: array
          items:
            $ref: '#/components/schemas/DataImageMountData'
        resourceGroup:
          type: string
        timeouts:
          $ref: '#/components/schemas/ModelTimeoutsData'
        resourceLimits:
          $ref: '#/components/schemas/ModelLimitsData'
        retriesConfig:
          $ref: '#/components/schemas/ModelRetriesData'
        batchesConfig:
          $ref: '#/components/schemas/ModelBatchesData'
        caching:
          $ref: '#/components/schemas/ModelCachingData'
        priorityQueue:
          $ref: '#/components/schemas/ModelPriorityQueueData'
        shortDescription:
          type: string
        languages:
          uniqueItems: true
          type: array
          items:
            type: string
        minInstancesCount:
          type: integer
          format: int32
        startTimeSec:
          type: number
          format: float
    PersistentVolumeData:
      required:
      - mountPath
      - sizeInGb
      - storageClass
      type: object
      properties:
        pvId:
          type: integer
          format: int64
        mountPath:
          type: string
        sizeInGb:
          type: integer
          format: int32
        storageClass:
          type: string
    DatasetInfoData:
      required:
      - name
      type: object
      properties:
        id:
          $ref: '#/components/schemas/DatasetPK'
        name:
          type: string
        datasetAccountName:
          type: string
        description:
          type: string
        dataType:
          type: string
        accessMode:
          type: string
          enum:
          - private
          - public
          - restricted
        warning:
          type: string
    DatasetPK:
      required:
      - accountId
      - datasetId
      type: object
      properties:
        accountId:
          type: integer
          format: int64
        datasetId:
          type: integer
          format: int64
    FitConfigData:
      required:
      - config
      - id
      - isDefault
      - isManual
      - name
      type: object
      properties:
        id:
          $ref: '#/components/schemas/FitConfigPK'
        name:
          type: string
        isDefault:
          type: boolean
        isManual:
          type: boolean
        config:
          type: string
    FitConfigPK:
      required:
      - accountId
      - configId
      - modelId
      type: object
      properties:
        accountId:
          type: integer
          format: int64
        modelId:
          type: integer
          format: int64
        configId:
          type: integer
          format: int64
    ImageInfoData:
      required:
      - image
      - name
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ImageInfoPK'
        name:
          type: string
        imageAccountName:
          type: string
        image:
          type: string
        accessMode:
          type: string
          enum:
          - private
          - public
          - restricted
    ImageInfoPK:
      required:
      - accountId
      - imageId
      type: object
      properties:
        accountId:
          type: integer
          format: int64
        imageId:
          type: integer
          format: int64
    ModelInfoData:
      required:
      - batchesConfig
      - billingSettings
      - caching
      - composite
      - dataImageMounts
      - favorite
      - fittable
      - hostingType
      - id
      - imageAccountId
      - modelName
      - persistentVolumes
      - priorityQueue
      - publicSettings
      - resourceLimits
      - restrictedImageAccess
      - retriesConfig
      - timeouts
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ModelInfoPK'
        modelAccountName:
          type: string
        modelAccountDisplayName:
          type: string
        modelName:
          type: string
        imageAccountId:
          type: integer
          format: int64
        imageId:
          type: integer
          format: int64
        image:
          $ref: '#/components/schemas/ImageInfoData'
        modelGroupId:
          type: integer
          format: int64
        modelGroupName:
          type: string
        trainingDatasetAccountId:
          type: integer
          format: int64
        trainingDatasetId:
          type: integer
          format: int64
        trainingDataset:
          $ref: '#/components/schemas/DatasetInfoData'
        trainingDatasetType:
          type: string
        trainingFitConfigId:
          type: integer
          format: int64
        trainingFitConfig:
          $ref: '#/components/schemas/FitConfigData'
        fitTemplateModelId:
          type: integer
          format: int64
        composite:
          type: boolean
        taskType:
          type: string
        trainingModelAccountId:
          type: integer
          format: int64
        trainingModelId:
          type: integer
          format: int64
        trainingType:
          type: string
          enum:
          - singleContainer
          - multipleFit
        config:
          type: string
        env:
          type: string
        fittable:
          type: boolean
        hostingType:
          type: string
          enum:
          - EXTERNAL
          - INTERNAL
          - HOSTING_SERVER
        persistentVolumes:
          type: array
          items:
            $ref: '#/components/schemas/PersistentVolumeData'
        dataImageMounts:
          type: array
          items:
            $ref: '#/components/schemas/DataImageMountData'
        resourceGroup:
          type: string
        timeouts:
          $ref: '#/components/schemas/ModelTimeoutsData'
        resourceLimits:
          $ref: '#/components/schemas/ModelLimitsData'
        retriesConfig:
          $ref: '#/components/schemas/ModelRetriesData'
        batchesConfig:
          $ref: '#/components/schemas/ModelBatchesData'
        caching:
          $ref: '#/components/schemas/ModelCachingData'
        priorityQueue:
          $ref: '#/components/schemas/ModelPriorityQueueData'
        shortDescription:
          type: string
        languages:
          uniqueItems: true
          type: array
          items:
            type: string
        minInstancesCount:
          type: integer
          format: int32
        publicSettings:
          $ref: '#/components/schemas/ModelPublicSettingsData'
        billingSettings:
          $ref: '#/components/schemas/ModelBillingSettingsData'
        restrictedImageAccess:
          type: boolean
        lastActivity:
          type: integer
          format: int64
        favorite:
          type: boolean
        state:
          type: string
          enum:
          - RUNNING
          - STARTING
          - INACTIVE
          - SLEEPING
    ModelInfoPK:
      required:
      - accountId
      - modelId
      type: object
      properties:
        accountId:
          type: integer
          format: int64
        modelId:
          type: integer
          format: int64
    AudioFormatOptions:
      type: object
      properties:
        audioEncoding:
          type: string
          enum:
          - LINEAR16_PCM
        sampleRateHertz:
          type: integer
          format: int32
        chunkSizeKb:
          type: integer
          format: int32
    TtsRequestData:
      required:
      - text
      type: object
      properties:
        text:
          type: string
        voice:
          type: string
        outputAudioSpec:
          $ref: '#/components/schemas/AudioFormatOptions'
    ResponseBodyEmitter:
      type: object
      properties:
        timeout:
          type: integer
          format: int64
    PredictRequestData:
      required:
      - data
      type: object
      properties:
        config:
          type: object
        data:
          type: object
    Predict2RequestData:
      required:
      - data
      type: object
      properties:
        config:
          type: string
        data:
          type: string
    ConfigCreateUpdateData:
      required:
      - config
      type: object
      properties:
        name:
          type: string
        isDefault:
          type: boolean
        config:
          type: string
    PredictConfigData:
      required:
      - config
      - id
      - isDefault
      - name
      type: object
      properties:
        id:
          $ref: '#/components/schemas/PredictConfigPK'
        name:
          type: string
        isDefault:
          type: boolean
        config:
          type: string
    PredictConfigPK:
      required:
      - accountId
      - configId
      - modelId
      type: object
      properties:
        accountId:
          type: integer
          format: int64
        modelId:
          type: integer
          format: int64
        configId:
          type: integer
          format: int64
    FitRequestData:
      required:
      - datasetId
      type: object
      properties:
        config:
          $ref: '#/components/schemas/JsonNode'
        configId:
          type: integer
          format: int64
        datasetId:
          type: integer
          format: int64
    JsonNode:
      type: object
    JobStatusData:
      required:
      - accountId
      - done
      - jobId
      - jobType
      - state
      type: object
      properties:
        accountId:
          type: integer
          format: int64
        jobId:
          type: integer
          format: int64
        jobType:
          type: string
        state:
          type: string
        done:
          type: boolean
        error:
          type: boolean
        errorMessage:
          type: string
    Fit2RequestData:
      required:
      - datasetId
      type: object
      properties:
        config:
          type: string
        configId:
          type: integer
          format: int64
        datasetId:
          type: integer
          format: int64
    ExternalConnectionInfoData:
      required:
      - connected
      - envVariables
      - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ModelInstancePK'
        connected:
          type: boolean
        dockerRunCommand:
          type: string
        envVariables:
          type: object
          additionalProperties:
            type: string
    ModelInstancePK:
      required:
      - accountId
      - instanceId
      - modelId
      type: object
      properties:
        accountId:
          type: integer
          format: int64
        modelId:
          type: integer
          format: int64
        instanceId:
          type: integer
          format: int64
    ExtendedRequestData:
      required:
      - methodName
      - params
      type: object
      properties:
        methodName:
          type: string
        params:
          type: object
          additionalProperties:
            type: string
    CrossValidationRequestData:
      required:
      - datasetId
      - minIntentSizeToDivide
      - parts
      type: object
      properties:
        baseModelAccountId:
          type: integer
          format: int64
        baseModelId:
          type: integer
          format: int64
        targetModelAccountId:
          type: integer
          format: int64
        targetModelName:
          type: string
        fitConfig:
          $ref: '#/components/schemas/JsonNode'
        fitConfigId:
          type: integer
          format: int64
        datasetId:
          type: integer
          format: int64
        predictConfig:
          $ref: '#/components/schemas/JsonNode'
        predictConfigId:
          type: integer
          format: int64
        parts:
          type: integer
          format: int32
        minIntentSizeToDivide:
          type: integer
          format: int32
    ModelGroupData:
      required:
      - name
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ModelGroupPK'
        name:
          type: string
    ModelGroupPK:
      required:
      - accountId
      - groupId
      type: object
      properties:
        accountId:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int64
    ManagementRequestData:
      required:
      - contacts
      type: object
      properties:
        contacts:
          type: string
        comment:
          type: string
    DeprecatedDatasetInfoWithContentData:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        dataType:
          type: string
        content:
          type: string
    CreateOrUpdateDatasetInfoData:
      required:
      - name
      type: object
      properties:
        id:
          $ref: '#/components/schemas/DatasetPK'
        name:
          type: string
        description:
          type: string
        dataType:
          type: string
        accessMode:
          type: string
          enum:
          - private
          - public
          - restricted
    DataImageInfoData:
      required:
      - image
      - name
      - sourcePath
      type: object
      properties:
        id:
          $ref: '#/components/schemas/DataImageInfoPK'
        name:
          type: string
        imageAccountName:
          type: string
        image:
          type: string
        sourcePath:
          type: string
        accessMode:
          type: string
          enum:
          - private
          - public
          - restricted
    DataImageInfoPK:
      required:
      - accountId
      - imageId
      type: object
      properties:
        accountId:
          type: integer
          format: int64
        imageId:
          type: integer
          format: int64
    ResourceGroupData:
      required:
      - affinity
      - name
      - tolerations
      type: object
      properties:
        name:
          type: string
        accountId:
          type: integer
          format: int64
        accountName:
          type: string
          writeOnly: true
        tolerations:
          type: object
        affinity:
          type: object
        ownerId:
          type: integer
          format: int64
        isDefault:
          type: boolean
        enabledAutoScaling:
          type: boolean
        enabledEviction:
          type: boolean
        resourceGroupType:
          type: string
          enum:
          - DOCKER
          - KUBERNETES
          - HOSTING_SERVER
        access:
          type: string
          enum:
          - PRIVATE
          - PUBLIC
    ResourceGroupsData:
      required:
      - groups
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/ResourceGroupData'
    TaskTypeData:
      required:
      - displayName
      - name
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        icon:
          type: string
        color:
          type: string
    ModelDefaults:
      required:
      - batches
      - limits
      - resourceGroup
      - retries
      - timeouts
      type: object
      properties:
        timeouts:
          $ref: '#/components/schemas/ModelTimeoutsData'
        retries:
          $ref: '#/components/schemas/ModelRetriesData'
        batches:
          $ref: '#/components/schemas/ModelBatchesData'
        limits:
          $ref: '#/components/schemas/ModelLimitsData'
        resourceGroup:
          type: string
    FrontendSettings:
      required:
      - isBillingEnabled
      - isExtendedLanding
      type: object
      properties:
        isBillingEnabled:
          type: boolean
        isExtendedLanding:
          type: boolean
    CaptchaData:
      required:
      - enabled
      - siteKey
      type: object
      properties:
        enabled:
          type: boolean
        siteKey:
          type: string
    PagedModelInfoData:
      required:
      - paging
      - records
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Pagination'
        records:
          type: array
          items:
            $ref: '#/components/schemas/ModelInfoData'
    Pagination:
      required:
      - pageNumber
      - pageSize
      - totalElements
      - totalPages
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    CheckResult:
      required:
      - critical
      - name
      - status
      type: object
      properties:
        name:
          type: string
        critical:
          type: boolean
        status:
          $ref: '#/components/schemas/Status'
    HealthCheckResult:
      required:
      - checks
      - ok
      - status
      type: object
      properties:
        ok:
          type: boolean
        status:
          type: string
        checks:
          type: array
          items:
            $ref: '#/components/schemas/CheckResult'
    Status:
      required:
      - message
      - ok
      type: object
      properties:
        ok:
          type: boolean
        message:
          type: string
    HealthCheckHistoryResult:
      required:
      - failedIntervals
      type: object
      properties:
        failedIntervals:
          type: array
          items:
            $ref: '#/components/schemas/HealthInterval'
    HealthInterval:
      required:
      - count
      - firstErrors
      - from
      - to
      type: object
      properties:
        from:
          type: string
        count:
          type: integer
          format: int32
        to:
          type: string
        firstErrors:
          type: array
          items:
            $ref: '#/components/schemas/CheckResult'
    StatLogData:
      required:
      - accountId
      - args
      - code
      - level
      - message
      - recordId
      - timestamp
      type: object
      properties:
        accountId:
          type: integer
          format: int64
        recordId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        node:
          type: string
        imageId:
          type: integer
          format: int64
        modelId:
          type: integer
          format: int64
        jobId:
          type: integer
          format: int64
        resourceGroup:
          type: string
        timestamp:
          type: string
        level:
          type: string
          enum:
          - INFO
          - ERROR
        code:
          type: string
        args:
          type: object
        message:
          type: string
    S3CredentialsData:
      required:
      - accessKey
      - bucketName
      - s3Url
      - secretKey
      type: object
      properties:
        s3Url:
          type: string
        accessKey:
          type: string
        secretKey:
          type: string
        bucketName:
          type: string
    Quantity:
      type: object
      properties:
        number:
          type: number
        format:
          type: string
          enum:
          - DECIMAL_EXPONENT
          - DECIMAL_SI
          - BINARY_SI
    ResourceGroupServerDataWithStatus:
      required:
      - id
      - name
      - rawConfiguration
      - resources
      - status
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        status:
          type: string
          enum:
          - RUNNING
          - STARTING
          - STOPPED
        resources:
          $ref: '#/components/schemas/Resources'
        rawConfiguration:
          type: string
    Resources:
      required:
      - baseInstanceCount
      - cpu
      - derivedInstanceCount
      - disk
      - gpu
      - podsCount
      - ram
      - strictlyNegativeOrZero
      type: object
      properties:
        cpu:
          $ref: '#/components/schemas/Quantity'
        ram:
          $ref: '#/components/schemas/Quantity'
        disk:
          $ref: '#/components/schemas/Quantity'
        gpu:
          type: integer
          format: int32
        baseInstanceCount:
          type: integer
          format: int32
        derivedInstanceCount:
          type: integer
          format: int32
        podsCount:
          type: integer
          format: int32
        strictlyNegativeOrZero:
          type: boolean
    Measurement:
      required:
      - ts
      - v
      type: object
      properties:
        ts:
          type: integer
          format: int64
        v:
          type: number
          format: double
    PageStatLogData:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        first:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/StatLogData'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        numberOfElements:
          type: integer
          format: int32
        last:
          type: boolean
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/Sort'
        paged:
          type: boolean
        unpaged:
          type: boolean
    Sort:
      type: object
      properties:
        sorted:
          type: boolean
        empty:
          type: boolean
        unsorted:
          type: boolean
    ResourceGroupCapacity:
      required:
      - diskMb
      - gpu
      - gpuModels
      - milliCpu
      - nodes
      - ramMb
      - vramMb
      type: object
      properties:
        milliCpu:
          type: integer
          format: int64
        ramMb:
          type: integer
          format: int64
        diskMb:
          type: integer
          format: int64
        gpu:
          type: integer
          format: int32
        gpuModels:
          uniqueItems: true
          type: array
          items:
            type: string
        vRamMb:
          type: integer
          format: int32
          writeOnly: true
        nodes:
          uniqueItems: true
          type: array
          items:
            type: string
        vramMb:
          type: integer
          format: int32
    ResourceGroupServicesData:
      required:
      - services
      type: object
      properties:
        services:
          type: array
          items:
            $ref: '#/components/schemas/ServiceData'
    ServiceData:
      required:
      - id
      - name
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ModelInfoPK'
        name:
          type: string
    ResourceGroupShortStatusData:
      required:
      - access
      - enabledAutoScaling
      - enabledEviction
      - isDefault
      - name
      - resourceGroupType
      - serversCount
      - servicesCount
      type: object
      properties:
        name:
          type: string
        ownerId:
          type: integer
          format: int64
        isDefault:
          type: boolean
        enabledAutoScaling:
          type: boolean
        enabledEviction:
          type: boolean
        resourceGroupType:
          type: string
          enum:
          - DOCKER
          - KUBERNETES
          - HOSTING_SERVER
        access:
          type: string
          enum:
          - PRIVATE
          - PUBLIC
        serversCount:
          type: integer
          format: int32
        servicesCount:
          type: integer
          format: int32
    InstancesStatusData:
      required:
      - externalRequested
      - hostingServerActive
      - hostingServerRequested
      - internalActive
      - internalInError
      - internalRequested
      type: object
      properties:
        internalRequested:
          type: integer
          format: int32
        internalActive:
          type: integer
          format: int32
        internalInError:
          type: integer
          format: int32
        hostingServerRequested:
          type: integer
          format: int32
        hostingServerActive:
          type: integer
          format: int32
        externalRequested:
          type: integer
          format: int32
    ModelShortStatusData:
      required:
      - instances
      - state
      type: object
      properties:
        state:
          type: string
          enum:
          - RUNNING
          - STARTING
          - INACTIVE
          - SLEEPING
        instances:
          $ref: '#/components/schemas/InstancesStatusData'
        lastJob:
          $ref: '#/components/schemas/JobStatusData'
        startTimeSeconds:
          type: number
          format: float
    ModelInstanceData:
      required:
      - id
      - instanceHostingType
      - restartCount
      - statusInfo
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        statusInfo:
          $ref: '#/components/schemas/StatusInfo'
        restartCount:
          type: integer
          format: int32
        lastRestartTimestamp:
          type: string
        createdTimestamp:
          type: string
        instanceHostingType:
          type: string
          enum:
          - deployment
          - pod
          - docker
          - external
          - hostingServer
    ModelInstanceListData:
      required:
      - instances
      type: object
      properties:
        instances:
          type: array
          items:
            $ref: '#/components/schemas/ModelInstanceData'
    StatusInfo:
      required:
      - isConnectedToAllGates
      - isDeleted
      - totalStatus
      type: object
      properties:
        totalStatus:
          type: string
          enum:
          - RUNNING
          - WAITING
          - SLEEPING
          - FAILED
          - DELETED
        isDeleted:
          type: boolean
        isConnectedToAllGates:
          type: boolean
        podStatus:
          type: string
    ModelStartTimeData:
      required:
      - instanceId
      - instanceStartTime
      - modelId
      type: object
      properties:
        modelId:
          type: integer
          format: int64
        instanceId:
          type: integer
          format: int64
        modelAverageStartTimeSec:
          type: number
          format: float
        instanceStartTime:
          type: string
          format: date-time
        instanceStartedTime:
          type: string
          format: date-time
        instanceErrorTime:
          type: string
          format: date-time
    InstanceLastState:
      type: object
      properties:
        running:
          $ref: '#/components/schemas/InstanceStateRunning'
        terminated:
          $ref: '#/components/schemas/InstanceStateTerminated'
        waiting:
          $ref: '#/components/schemas/InstanceStateWaiting'
    InstanceStateRunning:
      type: object
      properties:
        startedAt:
          type: string
    InstanceStateTerminated:
      type: object
      properties:
        startedAt:
          type: string
        finishedAt:
          type: string
        exitCode:
          type: integer
          format: int32
        reason:
          type: string
        message:
          type: string
    InstanceStateWaiting:
      type: object
      properties:
        reason:
          type: string
        message:
          type: string
    EventData:
      required:
      - name
      - namespace
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        createdTimestamp:
          type: string
        message:
          type: string
        reason:
          type: string
        source:
          $ref: '#/components/schemas/EventSource'
        firstSeenTimestamp:
          type: string
        lastSeenTimestamp:
          type: string
        count:
          type: integer
          format: int32
        kind:
          type: string
        fieldPath:
          type: string
        namespace:
          type: string
    EventSource:
      type: object
      properties:
        component:
          type: string
        host:
          type: string
    InstanceEventData:
      required:
      - events
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/EventData'
    InstanceEnvironmentData:
      required:
      - environment
      type: object
      properties:
        environment:
          type: object
          additionalProperties:
            type: string
    MethodDescriptorData:
      required:
      - fitted
      - name
      - output
      - params
      type: object
      properties:
        name:
          type: string
        params:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ParamTypeData'
        output:
          $ref: '#/components/schemas/ParamTypeData'
        fitted:
          type: boolean
    ParamTypeData:
      required:
      - type
      type: object
      properties:
        type:
          type: string
    SchemaFileData:
      required:
      - content
      - name
      type: object
      properties:
        name:
          type: string
        content:
          type: string
    ServiceDescriptorData:
      required:
      - fittable
      - methods
      - name
      - schemaFiles
      type: object
      properties:
        name:
          type: string
        schemaFiles:
          type: array
          items:
            $ref: '#/components/schemas/SchemaFileData'
        fittable:
          type: boolean
        methods:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MethodDescriptorData'
    PagedImageInfoData:
      required:
      - paging
      - records
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Pagination'
        records:
          type: array
          items:
            $ref: '#/components/schemas/ImageInfoData'
    ParaphrasingStatus:
      required:
      - statuses
      type: object
      properties:
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/TaskSuiteStatus'
    TaskSuiteStatus:
      required:
      - accountId
      - completed
      - created
      - newDatasetId
      - originalDatasetId
      type: object
      properties:
        accountId:
          type: integer
          format: int64
        originalDatasetId:
          type: integer
          format: int64
        newDatasetId:
          type: integer
          format: int64
        created:
          type: string
          format: date-time
        completed:
          type: boolean
    PagedDataImageInfoData:
      required:
      - paging
      - records
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Pagination'
        records:
          type: array
          items:
            $ref: '#/components/schemas/DataImageInfoData'
    ModelInstance:
      required:
      - connectionToken
      - id
      - isEvictable
      - kubeType
      - lastHeartBeat
      - started
      - type
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ModelInstancePK'
        connectionToken:
          type: string
        started:
          type: string
          format: date-time
        lastHeartBeat:
          type: string
          format: date-time
        type:
          type: string
          enum:
          - initialCheck
          - singleFit
          - singleFitPool
          - multipleFit
          - predict
        kubeType:
          type: string
          enum:
          - deployment
          - pod
          - docker
          - external
          - hostingServer
        resourceName:
          type: string
        alias:
          type: string
        customData:
          type: string
        deleteTimestamp:
          type: string
          format: date-time
        isEvictable:
          type: boolean
        hostingServerId:
          type: string
        serverId:
          type: integer
          format: int64
